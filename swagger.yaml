securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header

openapi: 3.0.0
info:
  title: Le Nkap
  version: 1.0.0
paths:
  /auth:
    post:
      summary: User Login
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: string
  /categories:
    get:
      summary: Get User Categories
      operationId: getCategories
      security:
        - bearerAuth: []
      parameters:
        - name: auth
          in: header
          description: An authorization header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
    post:
      summary: Add Category
      operationId: addCategory
      security:
        - bearerAuth: []
      parameters:
        - name: auth
          in: header
          description: An authorization header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCategoryRequest'
      responses:
        '200':
          description: Category added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /transactions:
    get:
      summary: Get User Transactions
      operationId: getTransactions
      security:
        - bearerAuth: []
      parameters:
        - name: auth
          in: header
          description: An authorization header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
    post:
      summary: Add Transaction
      operationId: addTransaction
      security:
        - bearerAuth: []
      parameters:
        - name: auth
          in: header
          description: An authorization header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTransactionRequest'
      responses:
        '200':
          description: Transaction added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    /{id}:
      get:
        summary: Get Transaction by ID
        operationId: getTransactionById
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
      put:
        summary: Update Transaction
        operationId: updateTransaction
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTransactionRequest'
          responses:
            '200':
              description: Transaction updated successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Transaction'
      delete:
        summary: Delete Transaction
        operationId: deleteTransaction
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Transaction deleted successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
  /users:
    post:
      summary: Register User
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: Get Logged In User
      operationId: getLoggedInUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    AddCategoryRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
      required:
        - name
        - type
    TransactionList:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    Transaction:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        amount:
          type: number
    AddTransactionRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        amount:
          type: number
        categoryId:
          type: string
      required:
        - name
        - type
        - amount
        - categoryId
    UpdateTransactionRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        amount:
          type: number
        categoryId:
          type: string
      required:
        - name
        - type
        - amount
        - categoryId
    RegisterUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
